#!/usr/bin/php
<?php

try{
	if(in_array('swap', $argv)){
		$swap_to = array_search('swap',$argv);
		$swap_to = $argv[$swap_to+1];
		$from_path = "./.elasticbeanstalk/config-$swap_to.yml";
		if(!is_file($from_path)){throw new Exception("file: $from_path {{not found}}");}
		$current_config_path = "./.elasticbeanstalk/config.yml";
		if(!is_file($current_config_path)) throw new Exception("{{current configuration file not found}}");
		$current_config = file_get_contents($current_config_path);
		if(!preg_match('/(environment)\s*\:\s*(\S+)/mi',$current_config,$match)){throw new Exception("Could not determine enviroment for `$current_config_path`");}
		$current_config_name = $match[2];
		if(!rename($current_config_path,"./.elasticbeanstalk/config-$current_config_name.yml")) throw new Exception("Could not name current configuration `{{{$current_config_name}}}`");
		if(!rename($from_path,"./.elasticbeanstalk/config.yml")) throw new Exception("{{Error Renaming `$swap_to`}}");
		// echoLine("old path: $from_path");
		die("Swap Done!\n");
	}

	//simulate
	$sim = true;
	if(count($argv)>0 && in_array('--run', $argv)){
		$sim=false;
	}else{
		echoLine('This is a {{SIMULATION}} please run flag {{--run}} for the real deal','yellow');
	}

	echoLine('Getting default enviroment information');
	exec('eb status',$resp);

	$stats = respToStats($resp);


	$deployed_version = $stats['Deployed Version'];

	if(empty($deployed_version)){
		throw new Exception("{{Could not determine deployed version}}");
	}

	echoLine("Deployed Application Version `{{{$deployed_version}}}`", 'green');


	echoLine('Getting List of enviroments ...');
	exec('eb list',$envs);
	$count = count($envs);
	if($count==0){
		throw new Exception("{{ERROR:}} Could not retrieve list of enviroments");
	}
	if(preg_match('/^(ERROR|WARN)/',$envs[0])){
		echo implode("\n", $envs) . "\n";
		throw new Exception("{{Doesn't look like enviroments are set up}}");
	}
	echoLine("Recieved {{{$count}}} Enviroments",'green');
	foreach ($envs as $i => $env) {
		$n = $i+1;
		echoLine( "\t{$n})\t{$env}");
	}

	// throw new Exception("{{STOPED}}");

	foreach ($envs as $i => $env) {
		if(preg_match('/\*/',$env)){
			echoLine("Skipping default enviroment {{{$env}}}", 'yellow');
			continue;
		}
		exec("eb status $env",$resp);;
		$this_stats = respToStats($resp);
		if($this_stats['Deployed Version'] == $deployed_version){
			echoLine("Enviroment {{{$env}}} alread up to date",'yellow');
		}else{
			if($sim){
				echoLine("Simulating deployment To {{#{$i}}} -> {{{$env}}}", 'yellow');
			}else{
				echoLine("Deploying To {{#{$i}}} -> {{{$env}}}", 'green');
				passthru("eb deploy {$env} --version {$deployed_version} --nohang");
			}
		}
	}

	// echoLine('{{Nothing actually happened, see SIMULATION notice above}}','red');

}
catch(Exception $e){
	echoLine($e->getMessage(),'red');
	exit;
}

function echoLine($msg, $color=false){
	if($color){
		$colors =[
			'black'			=> '0;30',
			'dark_gray'		=> '1;30',
			'blue'			=> '0;34',
			'light_blue'	=> '1;34',
			'green'			=> '0;32',
			'light_green'	=> '1;32',
			'cyan'			=> '0;36',
			'light_cyan'	=> '1;36',
			'red'			=> '0;31',
			'light_red'		=> '1;31',
			'purple'		=> '0;35',
			'light_purple'	=> '1;35',
			'brown'			=> '0;33',
			'yellow'		=> '1;33',
			'light_gray'	=> '0;37',
			'white'			=> '1;37',
		];
		$msg = preg_replace('/(\{\{)([^\}]+)(\}\})/', "\033[{$colors[$color]}m$2\033[0m", $msg);
	}
	echo $msg . "\n";
}

function respToStats($resp){
	$result = [];
	foreach ($resp as $i => $line) {
		if(preg_match('/^([^\:]*)\:(.*)$/',$line,$match)){
			$result[trim($match[1])] = trim($match[2]);
		}
	}
	return $result;
}
